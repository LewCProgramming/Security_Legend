import random

class Character():
    def __init__(self, name, HP = 6, ATK = 3, DODGE = 10, CRIT = 1):
        self.name = name
        self.HP = HP
        self.ATK = ATK
        self.DODGE = DODGE
        self.CRIT = CRIT
    
    def healUp(self, any_heal):
        self.HP += any_heal

    def takeDamage(self, attacking_enemy):
        print(f'The {attacking_enemy.name} attacks!')
        if self.DODGE >= random.randint(0,100):
            print('The enemy missed!')
        else:
            self.HP -= attacking_enemy.ATK
            #print(f'{self.name} the {character_class} took' + str(attacking_enemy.ATK) + ' points of damage!\n')
        if self.HP > 0:
            print(f'{self.name}\'s HP is now ' + str(self.HP))
        else:
            print('Game Over')
            quit()
        
    def dealDamage(self, enemy):
        print(f'You chose to attack the {enemy.name}!')
        if enemy.DODGE >= random.randint(0,100):
            print(f'The {enemy.name} dodged! You dealt no damage!')
        else:
            print(f'You hit the {enemy.name}!')
            if self.CRIT >= random.randint(0,100):
                enemy.HP -= (self.ATK)*3
                print('Critical hit! You dealt ' + str((self.ATK)*3) + 'points of damage!')
            else:
                enemy.HP -= self.ATK
            
            if enemy.HP > 0:
                print('The enemy\'s remaining health is: ' + str(enemy.HP))
            else:
                print ('The enemy has been defeated!')

    def showStats(self):
        print(self.name + '\'s stats: ')
        print("HP: " + str(self.HP))
        print("ATK: " + str(self.ATK))


def multiChoice(choices_prompt):
    answers = ['Help', 'Stats', 'Quit', '1', '2', '3']
    prompt_answer = input(choices_prompt + '\n')
    while prompt_answer.capitalize() not in answers:
        print('Invalid response. Type \'help\' for valid responses.')
        prompt_answer = input(choices_prompt + '\n')
    if prompt_answer.lower() == 'help':
        print('Valid responses are: ' + ' '.join(answers))
    elif prompt_answer.lower() == 'stats':
        player_character.showStats()
    elif prompt_answer.lower() == 'quit':
        print('Exiting Game...')
        quit()
    elif prompt_answer == '1':
        return 1
    elif prompt_answer == '2':
        return 2
    elif prompt_answer == '3':
        return 3
    #if 1, assign marker = 71 or whatever
    #key to next event

def battlePrompt(fight_prompt):
    answers = ['Help', 'Stats', 'Quit', 'Fight', 'First Aid', 'Evade']
    prompt_answer = input(fight_prompt + '\n')
    while prompt_answer.capitalize() not in answers:
        print('Invalid response. Type \'help\' for valid responses.')
        prompt_answer = input(fight_prompt + '\n')
    if prompt_answer.lower() == 'help':
        print('Valid responses are: ' + ' '.join(answers))
    elif prompt_answer.lower() == 'stats':
        player_character.showStats()
    elif prompt_answer.lower() == 'quit':
        print('Exiting Game...')
        quit()
    
def askPromptBool(bool_prompt):
    bool_answers = ['Yes', 'No']
    bool_prompt_answer = input(bool_prompt)
    while bool_prompt_answer.capitalize() not in bool_answers:
        print('Invalid response. Please answer \'Yes\' or \'No\'.')
        bool_prompt_answer = input(bool_prompt)
    if bool_prompt_answer.lower() == 'yes':
       return True
    elif bool_prompt_answer.lower() == 'no':
       return False  
        
def printTitle():
    print('   _____                      _ _           _                               _ ')
    print('  / ____|                    (_) |         | |                             | |')
    print(' | (___   ___  ___ _   _ _ __ _| |_ _   _  | |     ___  __ _  ___ _ __   __| |')
    print('  \___ \ / _ \/ __| | | | \'__| | __| | | | | |    / _ \/ _` |/ _ \ \'_ \ / _` |')
    print('  ____) |  __/ (__| |_| | |  | | |_| |_| | | |___|  __/ (_| |  __/ | | | (_| |')
    print(' |_____/ \___|\___|\__,_|_|  |_|\__|\__, | |______\___|\__, |\___|_| |_|\__,_|')
    print('                                     __/ |              __/ |                 ')
    print('                                    |___/              |___/                  ')

printTitle()

startCriteria = input('Start Security Legend?')
if startCriteria.capitalize().strip() == 'No':
    quit()
    
while startCriteria.capitalize().strip() != 'Yes':
    startCriteria = input('Start Security Legend?')
    if startCriteria.capitalize().strip() == 'No':
        quit()

name_input = input('\nEnter your character\'s name! You have a maximum of 10 characters.').strip()

while len(name_input) == 0 or not len(name_input) < 10:
    name_input = input('Your character\'s name has to be something and has to be 10 characters or less! Try again: \n')

#print('Select your class!')
#Knight(Tank - Health/Defense) -> Armored Knight
#Mage(Magic - Utility/Range) -> Great Mage
#Warrior(Range - Damage/Armor Penetration) -> Weapons Saint

#Enemies:
#Thief(Attacks First)
#Mercenary(Strong)
#Hunter(Ranged)


player_character = Character(name_input)

#askPrompt('What do you want to do?')

"""inputs = [1, 2, 3]

first_input = 0
while first_input not in inputs:
    first_input = input('What would you like to do? \n (1)Show Stats (2)Begin Adventure (3)Exit Game')
    
    if first_input == '1':
        player_character.showStats()
        first_input = 0
        continue
    elif first_input == '2':
        print('Away you go, then!')
        break
    elif first_input == '3':
        print('Exiting now...')
        quit()

two_input = 0
print('You observe a dark wall of trees before you. Ahead is the Wicked Woods. Do you dare enter?')
while two_input not in inputs:
    two_input = input('What would you like to do? \n (1)Show Stats (2)Enter (3)Exit Game')
    
    if two_input == '1':
        player_character.showStats()
        two_input = 0
        continue
    elif two_input == '2':
        print('Very well! You enter the woods...')
        break
    elif two_input == '3':
        print('Exiting now...')
        quit() 
        
print('OH MOTHER OF LORD! I mean... a monster appears before you. What shall you do?')
goblin.showStats

three_input = 0
while three_input not in inputs:
    three_input = input('What would you like to do? \n (1)Show Stats (2)Fight (3)Flee')
    
    if three_input == '1':
        player_character.showStats()
        three_input = 0
        continue
    elif three_input == '2':
        print('Very well! You choose to fight.')
        print('Enemy before you: ')
        goblin.showStats()
        break
    elif three_input == '3':
        print('You flee out of the forest. How pitiful. No more exploration for you, then. Game over.')
        quit() 
        
four_input = 0
while four_input not in inputs:
    four_input = input('What would you like to do? \n (1)Show Stats (2)Attack (3)Flee')
    
    if four_input == '1':
        player_character.showStats()
        four_input = 0
        continue
    elif four_input == '2':
        print('You attack the bastard Goblin! The Goblin Goon strikes back!')
        player_character.dealDamage(goblin)
        goblin.dealDamage(player_character)
        player_character.showStats()
        goblin.showStats()
        if goblin.HP <= 0:
            print('The Goblin has been slain!')
        break
    elif four_input == '3':
        print('You flee from the goblin and run into a bear trap. The monster finds you and eats you. Game over.')
        quit() """
